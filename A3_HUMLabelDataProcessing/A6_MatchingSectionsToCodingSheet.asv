clear all
clc

%Ritwika VPS
%April 2022; updated Dec 2023

%This script picks out corresponding 5 minute sections from LENA data for annotated 5 minute sections per the coding spreadsheet. The steps are as follows:
    %- Match file name (of the human labelled file, subrecs merged) to file name in the coding spreadsheet, get all corresponding coding spreadsheet entries (even for subrecs. Note 
        % that subrecs are parts of a whole day recording separated due to recorder pauses or deletions)
    %- Get start and end times for each 5 min section (hereafter called section) per human listener annotation
    %- Get start and end times for each section per coding spreadsheet
    %- Pick out sections that HAVE been annotated and match sections between human labelled data and coding spreadsheet info
    %- Pick out corresponding start and end times from LENA data (with the boundary straddling a voc being ok)
    %- Read corresponding LENA tables and Get corresponding LENA data with section info etc.
    %- Save new table 

%----------------------------------------------------------------------------------------------------------------------------------------------------------------------
%CHANGE PATHS ACCORDINGLY
BasePath = '/Users/ritwikavps/Desktop/GoogleDriveFiles/research/IVFCRAndOtherWorkWithAnne/Pre_registration_followu/Data/';
destinationpath = strcat(BasePath,'HUMLabelData/A2_HUMLabelData_PostCleanUp/A8_MatchedLENAZscoreSections/'); %path to save files
LENA_ZscoredTSPath = strcat(BasePath,'LENAData/A7_ZscoredTSAcousticsLENA/'); %path to LENA tables
Hum_ZscoredTSPath = strcat(BasePath,'HUMLabelData/A2_HUMLabelData_PostCleanUp/A7_HlabelTS_Zscored/'); %path to human listener labelled 

CodingSpreadsheet = readtable(strcat(BasePath,'HUMLabelData/A1_HUMLabelData_CleanupPipeline/SummaryCsvAndTxtFiles/FNSTETSimplified.csv')); %read in coding spreadsheet
%----------------------------------------------------------------------------------------------------------------------------------------------------------------------

cd(Hum_ZscoredTSPath); HumFiles = dir('*_ZscoredAcousticsTS_Hum.csv'); %read in human listener labelled tables (to see which sections have been annotated and to match start and end times)                                   
cd(LENA_ZscoredTSPath) %go to LENA path

for i = 1:numel(HumFiles) %go through list of human listener labelled files
    Htab = readtable(HumFiles(i).name,'Delimiter',','); %read in human-listener labelled table

    % Get the first end time and the last start time in each 5 minute section. This way, we can check these times against the section start and end times per the coding spreadsheet.
    % The rationale is that no annotated section should have annoated utterances that are fully outside of the start and end time bounds set by the coding spreadsheet. That is, the first
    % annotated utterance *should* end (at least) at or after the start time per the coding spreadsheet, and the last annotated utterance *should* start (at least) at or after the end
    % time per the coding spreadsheet.
    U_SectionNum = unique(Htab.SectionNum); %get unique section numbers
    H_FirstEndTime = []; H_LastStartTime = []; %initialise vectors to store the first end time and the last start time
    for j = 1:numel(U_SectionNum) %go through unique section numbers
        H_SubTab = Htab(Htab.SectionNum == U_SectionNum(j),:); %subset for section number
        H_FirstEndTime(j,1) = min(H_SubTab.xEnd); H_LastStartTime(j,1) = max(H_SubTab.start); %pick out the first end time and last start time  
    end

    H_FnRoot = erase(HumFiles(i).name,'_ZscoredAcousticsTS_Hum.csv'); %get the file name root
    CodingSubTab = CodingSpreadsheet(contains(CodingSpreadsheet.FileName,H_FnRoot),:); %get subset of coding spreadsheet that corresponds to the human-labelled file.

    IsSectionAnnotated = zeros(size(CodingSubTab.StartTimeSS)); %initialise vector to flag whether the section has been annotated or not
    for j = 1:numel(H_FirstEndTime) %flag sections that HAVe been annotated
        for k = 1:numel(CodingSubTab.StartTimeSS)
            if (H_FirstEndTime(j) >= CodingSubTab.StartTimeSS(k)) && (H_LastStartTime(j) <= CodingSubTab.EndTimeSS(k))
                IsSectionAnnotated(k) = 1;
            end
        end
    end

    LENA_tab = readtable(strcat(LENA_ZscoredTSPath,H_FnRoot,'_ZscoredAcousticsTS_LENA.csv'),'Delimiter',  ',');%read in corresponding LENA data table
    MatchedLENATab = array2table(zeros(0,size(LENA_tab,2))); %initialise table to store correponsing table of matched LENA 5 minute sections, all stitched together
    MatchedLENATab.Properties.VariableNames = LENA_tab.Properties.VariableNames;

    SectionNumber_Temp = 0; %initialise temporary section number tracker to keep track of the section number of the 5 minute section in the matched LENA table.
    SectionNumVec = []; %initialise vector to store the section number
    for j = 1:numel(IsSectionAnnotated) %go through the flag vector that keeps track of whether a section was annotated
        if IsSectionAnnotated(j) == 1
            SectionNumber_Temp = SectionNumber_Temp + 1; %if the section has been annotated, add to section number tracker
            
            LENA_SubTab = LENA_tab((LENA_tab.xEnd >= CodingSubTab.StartTimeSS(j) & LENA_tab.start <= CodingSubTab.EndTimeSS(j)),:); %pick out all utterances within the coding spreadsheet
            %bounds for the specific section
            MatchedLENATab = [MatchedLENATab; LENA_SubTab]; %add to table

            SectionNumVec = [SectionNumVec; SectionNumber_Temp*ones(size(LENA_SubTab.start))]; %add relevant section number to the section number vector
        end
    end

    %error check to make sure that files with unannotated sections are files that have already been flagged in FilesWithUnannotatedSections.csv
    if sum(IsSectionAnnotated) < numel(IsSectionAnnotated)
        fprint('File %s has %i unannotated sections wrt the coding spreadsheet',H_FnRoot,sum(IsSectionAnnotated) - numel(IsSectionAnnotated))
    end

    MatchedLENATab.SectionNum = SectionNumVec; %add the section number column to the table

    NewFnToSave = strcat(destinationpath,H_FnRoot,'_MatchedLENA_ZscoreTS.csv');  
    writetable(LenaMatchTab,NewFnToSave); %   save new file
end






%TODOOOOOOOO
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%also need summary info abt num of sections in spreadsheet for each voc
%file  + whether all such sections have been coded + how many 5 min
%segments each recording has in spreadsheet and in the actual eaf file
%We can do this when we match segments to LENA segments
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%
%The following (lines 89-134) was written to check if there are recorder pauses during
%sections. As of now, there aren't, so I am commenting this out. You can
%uncomment it if you want to check for yourself. 

% %now check if any sections ahve pauses. First, go to directory w pause info and dir
% cd('/Volumes/GoogleDrive/My Drive/research/IVFCRAndOtherWorkWithAnne/Pre_registration_followu/Data/LENAData/A3_PauseTimes')
% PauseDir = dir('*_PauseTimes.txt');
% 
% %go to directory with saved human listener annotataed files w section info
% cd(savepath)
% HumDir = dir('*_TSwSectionInfo.csv');
% 
% for i = 1:numel(HumDir)
%     for j = 1:numel(PauseDir)
% 
%         %find name matches
%         if contains(PauseDir(j).name,erase(HumDir(i).name,'_TSwSectionInfo.csv')) == 1
% 
%             %check if there are pauses in any section. To do this, first
%             %identify where the pauses are
%             PauseTab = readtable(PauseDir(j).name,'Delimiter','\t'); %delimter is tab
%             HumTab = readtable(HumDir(i).name,'Delimiter',',');
%             
%             if isempty(PauseTab) == 0 %if there ARE pauses
%                 
%                 %get times at which recorder was apused
%                 PauseEndTime = PauseTab.Var2; 
% 
%                 %get start and end time of sections - we can get this by getting the
%                 %uynique start and end times and remoing Nan from this list
%                 SecStart = unique(HumTab.SectionStartTime);
%                 SecStart = SecStart(~isnan(SecStart));
%                 SecEnd = unique(HumTab.SectionEndTime);
%                 SecEnd = SecEnd(~isnan(SecEnd));
% 
%                 for k = 1:numel(SecStart)
%                     for l = 1:numel(PauseEndTime)
%                         %check if there is a pause time between start and
%                         %end of a section
%                         if (PauseEndTime(l) > SecStart(k)) && (PauseEndTime(l) < SecEnd(k))
%                             i
%                         end
%                         %as it turns out, there aren't any pauses, so I am
%                         %not writing code to analyse that condition
%                     end
%                 end
%             end
%         end
%     end
% end

%some notes: the following files have what I consider a non-insiginificant
%number of annotated vocalisations that are not specified in the coding
%spreadsheet, specified below in order:
%(index i from the first for loop in thsi script, filename)
%(34 0193_010605a.eaf) (41 0223_000226.eaf) (57 0274_010611.eaf)
%(60 0275_000908.eaf) (70 0344_000606.eaf) (74 0425_000306.eaf)
%(79 0425_010611.eaf) (84 0441_000312b.eaf) (86 0517_000602.eaf)
%(92 0534_000307.eaf) (121 0776_000613.eaf) (138 0848_000600.eaf)
%(143 0919_000900.eaf) (15 0054_000902.eaf) (1 0009_000302.eaf) 
%(55 0274_000605.eaf) (69 0344_000300.eaf) (72 0344_010605.eaf)
%(98 0583_000605.eaf) (102 0623_000607.eaf) (128 0804_000602.eaf)
%(155 0969_000304.eaf) Of these: 
 %- index 34, 0193_010605a.eaf has no sections in the coding sheet, but, this is part a of a recordings and all 5 min 
  %sections are in part 2
 %- index 86, 0517_000602.eaf has a section in annotated file that is not in coding sheet that is less than a minute long, 
  %and another that is 5.09 minutes long, also not in coding sheet. We cannot be sure if this is because only these 1.6 minutes have CHN/AN vocs 
  %or even whether this 'section' is a continuous section because onset/offset times are also annotated by listeners. 
  %This is, in fact, an issue for all 'sections' that are in the annotated file but not in the coding sheet
 %- index 84, 0441_000312b.eaf has an issue because there are duplicates in the sheet, and one section in the sheet 
  %is less than 30 minutes away from another section, but in the annotated file, there is an additional section
  %that is roughly 1.6 minutes long. 
 %- index 15, '0054_000902.eaf' has a section in the annotated file about 5 min long that is not in the coding sheet
    %and does not have a section that is in teh coding sheet
 %- index 121, 0776_000613.eaf has a section in annotated file about 2.5 minutes long, about a minute long, and 
  %one, also not in coding sheet, that's about 3 minutes long
 %- index 79, 0425_010611.eaf had an issue because a start time was not being read in, and i have fixed that
  %by hard coding that info in
 %- indices 155, 128, 102, 72, 69, 55, 41, 60, 70, 92, 138, 143 has three sections in coding sheet + one section of vocs not in coding sheet
 %- indices 98, 1, 57, 74 has three sections in coding sheet + several not in

%altogether, tehre are roughly 1300 vocs that will be excluded from analysis in the human listener annotated data because 
%they are outside of designated sections

